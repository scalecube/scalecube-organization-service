/**
 * @api {ServiceMethod: deleteApiKey} /organizations/deleteApiKey deleteApiKey
 * @apiName DeleteApiKey
 * @apiGroup ApiKey
 * @apiVersion 0.0.0-CURRENT
 * @apiPermission Request / Response / Error-response
 *
 * @apiDescription This operation enables only organization managers <b>(Owner | Admin)</b> to delete the API keys (token) from the relevant organization.
 * Thus write or read rights will be revoked from the consumers of the Configuration service who was using the related terminated API key.
 *
 * >Note: this method returns all organization info thus API keys with:
 *  ><br>-all accessible permission levels ("Owner" | "Admin" | "Member") will be returned only for the related Organization Owner
 *  ><br>-"Admin" | "Member" permission levels will be returned only for the related Organization Admin
 *  ><br>-"Member" permission level will be returned only for the related Organization Member
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} organizationId Already stored id for the specific organization
 * @apiParam {String} apiKeyName Specified name for the relevant API key
 *
 * @apiSuccess {Object[]} apiKeys List of all API keys (Array of Objects) in the relevant organization
 * @apiSuccess {String} id Stored org-id for the relevant organization
 * @apiSuccess {String} name Organization name
 * @apiSuccess {String} email Organization e-mail
 * @apiSuccess {String} ownerId id for clients already generated by relevant authority (Auth0)
 *
 * @apiError {String} field Permission denied for specified organization member either organization outsider
 *
 * @apiErrorExample {json} WebSocket
 * Request:
 *     {
 *         "q":"/organizations/deleteApiKey",
 *         "sid": 1,
 *         "d":{
 *               "token": {
 *                           "token":"Auth0-TOKEN"
 *               },
 *         "organizationId":"ORG-ID",
 *         "apiKeyName": "specifiedApiKeyName",
 *         }
 *     }
 *
 * Response:
 *     {
 *         "q":"/organizations/deleteApiKey",
 *         "sid":1,
 *         "d":{
 *                "apiKeys":[],
 *                "id":"ORG-ID",
 *                "name":"specifiedOrganizationName",
 *                "email":"specifiedOrganization@email.com",
 *                "ownerId":"id@clients"
 *         }
 *
 *     }
 *
 *     {
 *         "sig":1,
 *         "sid":1
 *     }
 *
 * Error Response:
 *     {
 *         "sig":2,
 *         "q":"/io.scalecube.services.error/500",
 *         "sid":1,
 *         "d":{
 *                "errorCode":500,
 *                "errorMessage":"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'"
 *         }
 *     }
 *
 * @apiErrorExample {json} RSocket
 * Request:
 *     {
 *         "metadata":{
 *                      "q": "/organizations/deleteApiKey"
 *         },
 *         "data":{
 *                   "token": {
 *                               "token":"Auth0-TOKEN"
 *                   },
 *         "organizationId":"ORG-ID",
 *         "apiKeyName": "specifiedApiKeyName",
 *         }
 *     }
 *
 * Response:
 *     {
 *         "data":{
 *                   "apiKeys":[],
 *                   "id":"ORG-ID",
 *                   "name":"specifiedOrganizationName",
 *                   "email":"specifiedOrganization@email.com",
 *                   "ownerId":"id@clients"
 *         },
 *         "metadata":{
 *           "q": "/organizations/deleteApiKey"
 *         }
 *     }
 *
 * Error Response:
 *     {
 *         "data":{
 *                   "errorCode":500,
 *                   "errorMessage":"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'"
 *         },
 *         "metadata":{
 *                      "q":"/io.scalecube.services.error/500"
 *         }
 *     }
 *
 * @apiErrorExample{json} HTTP
 * Request:
 * https://localhost:port/organizations/deleteApiKey (endpoint url)
 *
 * Body:
 *     {
 *        "token": {
 *                     "token":"Auth0-TOKEN"
 *         },
 *         "organizationId":"ORG-ID",
 *         "apiKeyName": "specifiedApiKeyName",
 *     }
 *
 * Response:
 *     {
 *         "apiKeys":[],
 *         "id":"ORG-ID",
 *         "name":"specifiedOrganizationName",
 *         "email":"specifiedOrganization@email.com",
 *         "ownerId":"id@clients"
 *     }
 *
 * Error Response:
 *     {
 *         "errorCode":500,
 *         "errorMessage":"user: 'id@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'"
 *     }
 */
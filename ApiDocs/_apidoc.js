/**
 * @api {endpoint / create} /organizations/create Create new Organization
 * @apiName CreateOrganization
 * @apiGroup Organization
 * @apiVersion 2.0.15
 * @apiDescription This operation enables origin owner (founder) to create the specific organization and store its metadata (information)
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} name Specified organization name
 * @apiParam {String} email Specified organization e-mail
 *
 * @apiSuccess {Array} apiKeys List of all API keys (objects) for the relevant organization
 * @apiSuccess {String} id Generated id for the created organization
 * @apiSuccess {String} name Specified organization name
 * @apiSuccess {String} email Specified organization e-mail
 * @apiSuccess {String} ownerId id for clients already generated by relevant authority (Auth0)
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 },
 *         "name":"specifiedOrganizationName",
 *         "email":"specifiedOrganization@email.com"
 *     }
 *
 * @apiSuccessExample Success-Response (Extends OrganizationInfo):
 *     {
 *         "apiKeys":[],
 *         "id":"ORG-EA40B924B51BF3FF5611",
 *         "name":"specifiedOrganizationName",
 *         "email":"specifiedOrganization@email.com",
 *         "ownerId":"PpgvNAZwXYLq5RvUIj6bA3V4eLk0Ekp7@clients"
 *     }
 *
 * @apiError {String} field Organization name wasn't specified
 * @apiErrorExample {json} Error-Response:
 *     {
 *        errorCode":500,
 *        "errorMessage":"Organization name cannot be empty"
 *     }
 */
{
  "name": "Organization service",
  "version": "2.0.15",
  "description": "Organization service API",
  "title": "API documentation for the Organization Service",
  "url" : "Websocket: wss://configuration-service-7070.genesis.om2.com/\nRSocket: wss://configuration-service-9090.genesis.om2.com/\nHTTP: https://configuration-service-8080.genesis.om2.com",
  "template": {
    "forceLanguage" : "en"
  },
  "order": [
    "Overview",
    "GettingStarted",
    "TransportProtocols",
    "InteractiveAPIExplorer",
    "CreateOrganization",
    "GetOrganization",
    "UpdateOrganization",
    "DeleteOrganization",
    "InviteMember",
    "KickoutMember",
    "LeaveOrganization",
    "UpdateOrganizationMemberRole",
    "GetOrganizationMembers",
    "GetUserOrganizationsMembership",
    "AddOrganizationApiKey",
    "DeleteOrganizationApiKey"
  ]
}
{
  "name": "Organization service",
  "version": "2.0.15",
  "description": "Organization service API",
  "title": "API documentation for the Organization Service",
  "url" : "wss://$FORMATTED_BRANCH_NAME.genesis.om2.com",
  "template": {
    "forceLanguage" : "en"
  },
  "order": [
    "Overview",
    "GettingStarted",
    "TransportProtocols",
    "InteractiveAPIExplorer",
    "CreateOrganization",
    "GetOrganization",
    "UpdateOrganization",
    "DeleteOrganization",
    "InviteMember",
    "KickoutMember",
    "LeaveOrganization",
    "UpdateOrganizationMemberRole",
    "GetOrganizationMembers",
    "GetUserOrganizationsMembership",
    "AddOrganizationApiKey",
    "DeleteOrganizationApiKey"
  ]
}
/**
 * @api {endpoint / getUserOrganizationsMembership} /organizations/getUserOrganizationsMembership Get the user membership
 * @apiName getUserOrganizationsMembership
 * @apiGroup Organization
 * @apiVersion 2.0.15
 * @apiDescription This operation enables to get the list of all relevant organizations (full info) which the
 * valid (authorized by relevant authority - Auth0) user steeped into as the member as do the origin owner (founder)
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 *
 * @apiSuccess {Array} apiKeys List of all API keys (objects) for the relevant organization
 * @apiSuccess {String} id Stored id for the specific organization
 * @apiSuccess {String} name Specified organization name
 * @apiSuccess {String} email Specified organization e-mail
 * @apiSuccess {String} ownerId id for clients already generated by relevant authority (Auth0)
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 }
 *     }
 *
 * @apiSuccessExample Success-Response (Extends OrganizationInfos):
 *     {
 *
 *         "organizations":[
 *                            {
 *                              "apiKeys":[],
 *                              "id":"ORG-ACF8F702CE82DE56D974",
 *                              "name":"NewSpecifiedOrganizationName",
 *                              "email":"NewspecifiedOrganization@email.com",
 *                              "ownerId":"DJMWEi19k7jxM1LasBqWAdne7oBsIH7p@clients"
 *                          },
 *                            {
 *                              "apiKeys":[],
 *                              "id":"ORG-EA40B924B51BF3FF5611",
 *                              "name":"specifiedOrganizationName",
 *                              "email":"specifiedOrganization@email.com",
 *                              "ownerId":"PpgvNAZwXYLq5RvUIj6bA3V4eLk0Ekp7@clients"
 *                            }
 *                        ]
 *     }
 * @apiError {String} field Invalid or expired token
 * @apiErrorExample {json} Error-Response:
 *     {
 *        errorCode":500,
 *        "errorMessage":"Token verification failed"
 *     }
 */
/**
 * @api {endpoint / kickoutMember} /organizations/kickoutMember Remove the member from Organization
 * @apiName KickoutMember
 * @apiGroup Member
 * @apiVersion 2.0.15
 * @apiDescription This operation enables origin owner (founder) to remove the existent organization member and allowable
 * only for organization members who possess one of manager's roles (Owner/Admin). Nevertheless at least one Owner (origin or granted one) should be persisted in the organization
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} organizationId Already stored id for the specific organization
 * @apiParam {String} userId Already stored id for the specific organization issued by relevant authority (Auth0)
 *
 * @apiSuccess Acknowledgment Empty object
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "issuer":"auth0",
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 },
 *         "organizationId":"ORG-EA40B924B51BF3FF5611",
 *         "userId": "PpgvNAZwXYLq5RvUIj6bA3V4eLk0Ekv@clients"
 *     }
 *
 * @apiSuccessExample Success-Response (not implemented):
 *     {
 *
 *     }
 *
 * @apiError {String} field Invalid action upon the single (last one) organization Owner requested to be removed from the relevant organization
 * @apiErrorExample {json} Error-Response:
 *     {
 *        errorCode":500,
 *        "errorMessage":"At least one Owner should be persisted in the organization: 'ORG-EA40B924B51BF3FF5611'"
 *     }
 */
/**
 * @api {endpoint / addOrganizationApiKey} organizations/addOrganizationApiKey Create the API key
 * @apiName AddOrganizationApiKey
 * @apiGroup ApiKey
 * @apiVersion 2.0.15
 * @apiDescription This operation enables origin owner (founder) to create the API key (token) with assigned role (permission level - Owner/Admin/Member)
 * in the relevant organization and allowable only for organization members who possess one of manager's roles (Owner/Admin). API keys with relevant assigned roles
 * don't relate to the organization members' similar roles and they purposed for the appropriate permission level (write or read) provision for <a href="http://scalecube.io/configuration-service/index.html">Configuration service</a> usage
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} organizationId Already stored id for the specific organization
 * @apiParam {String} apiKeyName Specified name for the relevant API key
 * @apiParam {Object} claims (Map<String,String>) Specified role (Owner/Admin/Member - permission level for the relevant API key)
 *
 * @apiSuccess {Array} apiKeys List of all API keys (objects) for the relevant organization
 * @apiSuccess {String} id Stored id for the specific organization
 * @apiSuccess {String} name Specified organization name
 * @apiSuccess {String} email Specified organization e-mail
 * @apiSuccess {String} ownerId id for clients already generated by relevant authority (Auth0)
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 },
 *         "organizationId":"ORG-EA40B924B51BF3FF5611",
 *         "apiKeyName": "specifiedApiKeyName",
 *         "claims": {
 *                      "role": "Owner"
 *                   }
 *     }
 *
 * @apiSuccessExample Success-Response (Extends OrganizationInfo):
 *     {
 *         "apiKeys":[
 *                      {
 *                           "name":"specifiedApiKeyName",
 *                           "claims":{"role":"Owner"},
 *                           "key":"eyJraWQiOiIyODQyYzFkYS0zMTFjZDlhNzU4NjViNTkiLCJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJPE1NDQ0NTA4MTksInN1YiI6Ik9SRy1BQ0Y4X0.RVhFs4WENT2_cR7Jy_1yB7YStO0d5V9Va43Q7lVqarU"
 *                      }
 *                   ],
 *         "id":"ORG-EA40B924B51BF3FF5611",
 *         "name":"specifiedOrganizationName",
 *         "email":"specifiedOrganization@email.com",
 *         "ownerId":"PpgvNAZwXYLq5RvUIj6bA3V4eLk0Ekp7@clients"
 *     }
 *
 * @apiError {String} field API key name duplication
 * @apiErrorExample {json} Error-Response (Not implemented):
 *     {
 *        errorCode":500,
 *        "errorMessage":"apiKey name:'specifiedApiKeyName' already exists"
 *     }
 */
/**
 * @api {endpoint / delete} /organizations/delete Delete the Organization
 * @apiName DeleteOrganization
 * @apiGroup Organization
 * @apiVersion 2.0.15
 * @apiDescription This operation enables origin owner (founder) to delete the specific organization and allowable only
 * for organization members who possess one of manager's roles (Owner/Admin)
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} organizationId Already stored id for the specific organization
 *
 * @apiSuccess {Boolean} deleted The "true" statement
 * @apiSuccess {String} organizationId Already Stored id for the specific organization
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 },
 *         "organizationId":"ORG-EA40B924B51BF3FF5611"
 *     }
 *
 * @apiSuccessExample Success-Response:
 *     {
 *         "deleted":true,
 *         "organizationId":"ORG-EA40B924B51BF3FF5611"
 *     }
 *
 * @apiError {String} field Invalid or non-existent organization id
 * @apiErrorExample {json} Error-Response:
 *     {
 *        errorCode":500,
 *        "errorMessage":"ORG-EA40B924B51BF3FF56NON"
 *     }
 */
/**
* @api {Transport protocols} / Summary
* @apiName Datatypes
* @apiVersion 2.0.15
* @apiGroup Datatypes
* @apiDescription This chapter will detail datatypes that require specific format for or support a specific set of values.
<br> Currently the validation is implemented for specific parameters which value type is string and can only contain characters
in range A-Z, a-z, 0-9 as well as underscore, period, dash & percent. Appropriate validation will be added soon.
*/
/**
 * @api {endpoint / deleteOrganizationApiKey} /organizations/deleteOrganizationApiKey Delete the API key
 * @apiName DeleteOrganizationApiKey
 * @apiGroup ApiKey
 * @apiVersion 2.0.15
 * @apiDescription This operation enables origin owner (founder) to delete the stored API key (token) in the relevant organization
 * and allowable only for organization members who possess one of manager's roles (Owner/Admin). API keys with relevant assigned roles
 * don't relate to the organization members' similar roles and they purposed for the appropriate permission level (write or read) provision for <a href="http://scalecube.io/configuration-service/index.html">Configuration service</a> usage
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} organizationId Already stored id for the specific organization
 * @apiParam {String} apiKeyName Specified name for the relevant API key
 *
 * @apiSuccess {Array} apiKeys List of all API keys (objects) for the relevant organization
 * @apiSuccess {String} id Stored id for the specific organization
 * @apiSuccess {String} name Specified organization name
 * @apiSuccess {String} email Specified organization e-mail
 * @apiSuccess {String} ownerId id for clients already generated by relevant authority (Auth0)
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 },
 *         "organizationId":"ORG-EA40B924B51BF3FF5611",
 *         "apiKeyName": "specifiedApiKeyName",
 *     }
 *
 * @apiSuccessExample Success-Response (Extends OrganizationInfo):
 *     {
 *         "apiKeys":[],
 *         "id":"ORG-EA40B924B51BF3FF5611",
 *         "name":"specifiedOrganizationName",
 *         "email":"specifiedOrganization@email.com",
 *         "ownerId":"PpgvNAZwXYLq5RvUIj6bA3V4eLk0Ekp7@clients"
 *     }
 *
 * @apiError {String} field deletion of non-existent API key
 * @apiErrorExample {json} Error-Response (Not implemented):
 *     {
 *        errorCode":500,
 *        "errorMessage":"apiKey name:'specifiedApiKeyName' doesn't exist"
 *     }
 */
/**
 * @api {endpoint / getOrganization} /organizations/getOrganization Get Organization info
 * @apiName GetOrganization
 * @apiGroup Organization
 * @apiVersion 2.0.15
 * @apiDescription This operation enables origin owner (founder) to get the relevant organization information and allowable for each organization member
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} organizationId Already stored id for the specific organization
 *
 * @apiSuccess {Array} apiKeys List of all API keys (objects) for the relevant organization
 * @apiSuccess {String} id Stored id for the specific organization
 * @apiSuccess {String} name Specified organization name
 * @apiSuccess {String} email Specified organization e-mail
 * @apiSuccess {String} ownerId id for clients already generated by relevant authority (Auth0)
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 },
 *         "organizationId":"ORG-EA40B924B51BF3FF5611"
 *     }
 *
 * @apiSuccessExample Success-Response (Extends OrganizationInfo):
 *     {
 *         "apiKeys":[],
 *         "id":"ORG-EA40B924B51BF3FF5611",
 *         "name":"specifiedOrganizationName",
 *         "email":"specifiedOrganization@email.com",
 *         "ownerId":"PpgvNAZwXYLq5RvUIj6bA3V4eLk0Ekp7@clients"
 *     }
 *
 * @apiError {String} field Invalid or expired token
 * @apiErrorExample {json} Error-Response:
 *     {
 *        errorCode":500,
 *        "errorMessage":"Token verification failed"
 *     }
 */
/**
 * @api {endpoint / leaveOrganization} /organizations/leaveOrganization Leave the Organization
 * @apiName LeaveOrganization
 * @apiGroup Organization
 * @apiVersion 2.0.15
 * @apiDescription This operation enables to step-out from the specific organization and allowable for each organization
 * member as do for origin owner (founder). Nevertheless at least one Owner (origin or granted one) should be persisted in the organization
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} organizationId Already stored id for the specific organization
 *
 * @apiSuccess Acknowledgment Empty object
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 },
 *         "organizationId":"ORG-EA40B924B51BF3FF5611"
 *     }
 *
 * @apiSuccessExample Success-Response:
 *     {
 *
 *     }
 *
 * @apiError {String} field Invalid action upon the single (last one) organization Owner requested to be removed from the relevant organization
 * @apiErrorExample {json} Error-Response:
 *     {
 *        errorCode":500,
 *        "errorMessage":"At least one Owner should be persisted in the organization: 'ORG-EA40B924B51BF3FF5611'"
 *     }
 */
/**
 * @apiDefine BadRequestError
 * @apiVersion 2.0.15
 * @apiError BadRequestError The request didn't pass validation
 *
 * @apiErrorExample Error-Response:
 * {
 *   "errorCode": "400"
 *   "errorMessage": "Bad request."
 * }
 */

/**
 * @apiDefine InternalServerError
 *
 * @apiError (Error 500) InternalServerError Error happened during request processing
 *
 * @apiErrorExample Error-Response:
 * {
 *   "errorCode": "500"
 *   "errorMessage": "Error message"
 * }
 */

/**
 * @apiDefine ServiceUnavailableError
 *
 * @apiError (Error 503) ServiceUnavailableError Service in not available to accept requests
 *
 * @apiErrorExample Error-Response:
 * {
 *   "errorCode": "503"
 *   "errorMessage": "No reachable member with such service: %s"
 * }
 */
/**
 * @api {endpoint / updateOrganization} /organizations/updateOrganization Edit the Organization
 * @apiName UpdateOrganization
 * @apiGroup Organization
 * @apiVersion 2.0.15
 * @apiDescription This operation enables origin owner (founder) to optionally update (edit) the specific organization
 * information either name or email and allowable only for organization members who possess one of manager's roles (Owner/Admin)
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} organizationId Already stored id for the specific organization
 * @apiParam {String} name New specified organization name
 * @apiParam {String} email New specified organization e-mail
 *
 * @apiSuccess {Array} apiKeys List of all API keys (objects) for the relevant organization
 * @apiSuccess {String} id Stored id for the specific organization
 * @apiSuccess {String} name New specified organization name
 * @apiSuccess {String} email New specified organization e-mail
 * @apiSuccess {String} ownerId id for clients already generated by relevant authority (Auth0)
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 },
 *         "organizationId":"ORG-EA40B924B51BF3FF5611",
 *         "name":"newSpecifiedOrganizationName",
 *         "email":"newSpecifiedOrganization@email.com"
 *     }
 *
 * @apiSuccessExample Success-Response (Extends OrganizationInfo):
 *     {
 *         "apiKeys":[],
 *         "id":"ORG-EA40B924B51BF3FF5611",
 *         "name":"newSpecifiedOrganizationName",
 *         "email":"newSpecifiedOrganization@email.com",
 *         "ownerId":"PpgvNAZwXYLq5RvUIj6bA3V4eLk0Ekp7@clients"
 *     }
 *
 * @apiError {String} field Organization e-mail wasn't specified
 * @apiErrorExample {json} Error-Response:
 *     {
 *        errorCode":500,
 *        "errorMessage":"Organization email cannot be empty"
 *     }
 */
/**
 * @api {endpoint / inviteMember} /organizations/inviteMember Invite the member to Organization
 * @apiName InviteMember
 * @apiGroup Member
 * @apiVersion 2.0.15
 * @apiDescription This operation enables origin owner (founder) to invite a valid member (which id issued by relevant authority - Auth0)
 * to step into specific organization and allowable only for organization members who possess one of manager's roles (Owner/Admin)
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} organizationId Already stored id for the specific organization
 * @apiParam {String} userId Already stored id for the specific organization issued by relevant authority (Auth0)
 *
 * @apiSuccess Acknowledgment Empty object
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 },
 *         "organizationId":"ORG-EA40B924B51BF3FF5611",
 *         "userId": "PpgvNAZwXYLq5RvUIj6bA3V4eLk0Ekv@clients"
 *     }
 *
 * @apiSuccessExample Success-Response:
 *     {
 *
 *     }
 *
 * @apiError {String} field Invalid role (permission level) for specified organization member either outsider
 * @apiErrorExample {json} Error-Response:
 *     {
 *        errorCode":500,
 *        "errorMessage":"user: 'DJMWEi19k7jxM1LasBqWAdne7oBsIJ5t@clients', name: 'null', not in role Owner or Admin of organization: 'specifiedOrganizationName'"
 *     }
 */
/**
 * @api {endpoint / updateOrganizationMemberRole} /organizations/updateOrganizationMemberRole Update the Organization member's role
 * @apiName UpdateOrganizationMemberRole
 * @apiGroup Member
 * @apiVersion 2.0.15
 * @apiDescription This operation enables origin owner (founder) to upgrade/downgrade relevant member role in the specific organization
 * and allowable only for organization members who possess one of manager's roles (Owner/Admin). Nevertheless any of the members who posses manager's roles
 * couldn't downgrade or upgrade themselves and just only the members with relevant manager's roles are able to do that
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} organizationId Already stored id for the specific organization
 * @apiParam {String} userId Already stored id for the specific organization issued by relevant authority (Auth0)
 *
 * @apiSuccess Acknowledgment Empty object
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 },
 *         "organizationId":"ORG-EA40B924B51BF3FF5611",
 *         "userId": "PpgvNAZwXYLq5RvUIj6bA3V4eLk0Ekv@clients",
 *         "role": "Owner"
 *     }
 *
 * @apiSuccessExample Success-Response:
 *     {
 *
 *     }
 *
 * @apiError {String} field valid user isn't the member (outsider) of the specified organization
 * @apiErrorExample {json} Error-Response:
 *     {
 *        errorCode":500,
 *        "errorMessage":"user: 'null', name: 'DJMWEi19k7jxM1LasBqWAdne7oBsImPy@clients', is not a member of organization: 'ORG-EA40B924B51BF3FF5611"
 *     }
 */
/**
* @api {Host addresses} / Getting Started
* @apiName GettingStarted
* @apiGroup Overview
* @apiVersion 2.0.15
* @apiDescription Organization service enable you to integrate the API in order to create and manage the organizations.
* Besides the origin owner (founder) abilities there is necessity for relevant organization members to achieve appropriate permission level (roles: Owner/Admin) for manage.
* Thus each organization could be deleted or relevant credentials updated, valid members could be invited to and removed from the relevant organization as do the
* granted members roles (Owner/Admin/Member) could be updated and each member could get the info about the organization and own membership.
* Organization managers could provide and delete the relevant API keys (permission level with appropriate assigned roles: Owner/Admin/Member) which are vital leverage
* for the <a href="http://scalecube.io/configuration-service/index.html">Configuration service</a> management and security purpose and don't relates to the organization members similar roles.
*
*
* <b>Getting Started</b>
*
*
* All API endpoints documented below are the integral part of <a href="http://scalecube.io/configuration-service/index.html">Configuration service</a> host address.
* <br> You can try out any query in realtime using our interactive API.
* Actually service requires token authentication, so there is a necessity to get the token issued via secured authority.
* <br>Thus, we recommend you first to create an account in <a href="https://manage.auth0.com/">Auth0</a> and issue the token whereby to perform the valid requests across all service endpoints.
*
* Validation for the object entities is handled by scalecube services and do the next upon the request object:
* >~ ignores any excessive keys and values added besides the required parameters
* ><br>~ doesn't ignore the keys duplicates and takes the last values which applied for each of the relevant key duplicate
*/
/**
  * @api {Host addresses} / Interactive API Explorer
  * @apiName InteractiveAPIExplorer
  * @apiGroup Overview
  * @apiVersion 2.0.15
  * @apiDescription For example <b>Websocket</b> connection is one of the accessible ways to use the API, so please follow the steps below to connect and perform requests via Sandbox:
  <ul>
                 <li> Navigate to the sandbox: <a href="http://scalecube.io/api-sandbox/app/index.html">Scalecube sandbox</a> </li>
                 <li> Click on the <b>Settings</b> button and choose the relevant <b>transort</b> and host <b>address</b>: wss://configuration-service-7070.genesis.om2.com </li>
                 <li> Click on <b>Import icon</b> and copy-paste the template.json file path <a href="https://raw.githubusercontent.com/PavloPetrina/JsonData/master/OrganizationServiceALL.json">Organization service endpoints.json</a></li>
                 <li> Click on the <b>Connect</b> button (now you are connected to the environment) and push <b>Send</b> button to make your request</li>
  </ul>
*/
/**
 * @api {endpoint / getOrganizationMembers} /organizations/getOrganizationMembers Get the Organization members
 * @apiName getOrganizationMembers
 * @apiGroup Member
 * @apiVersion 2.0.15
 * @apiDescription This operation enables origin owner (founder) to fetch all the members in the relevant organization and allowable for each organization member
 *
 * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
 * @apiParam {String} organizationId Already stored id for the specific organization
 *
 * @apiSuccess {Array} members List of all the members in the specified organization
 *
 * @apiParamExample {json} Request-Example:
 *     {
 *         "token": {
 *                      "token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IlJUSkROekJFTXpjNFJEUTFSa0UzTkRZM05FWkVOemM1TUVWQ1JFRXdOREF6UWtFelF6QkRNQSJ9.
 *                      eyJpc3MiOiJodHRwczovL3BhdmxvLmF1dGgwLmNvbS8iLCJzdWIiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDM0BjbGllbnRzIiwiYXVkIjoiaHR0cHM6Ly9w
 *                      YXZsby5hdXRoMC5jb20vYXBpL3YyLyIsImlhdCI6MTU0NjYwNjM3OCwiZXhwIjoxNTQ5MTk4Mzc4LCJhenAiOiJQcGd2TkFad1hZTHE1UnZVSWo2YkEzVjRlTGswRWtDMyIsInNj
 *                      b3BlIjoicmVhZDpjbGllbnRfZ3JhbnRzIGNyZWF0ZTpjbGllbnRfZ3JhbnRzIGRlbGV0ZTpjbGllbnRfZ3JhbnRzIHVwZGF0ZTpjbGllbnRfZ3JhbnRzIHJlYWQ6dXNlcnMgdXBkY
 *                      XRlOnVzZXJzIGRlbGV0ZTp1c2VycyBjcmVhdGU6dXNlcnMgcmVhZDp1c2Vyc19hcHBfbWV0YWRhdGEgdXBkYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBkZWxldGU6dXNlcnNfYXBwX21
 *                      ldGFkYXRhIGNyZWF0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJfdGlja2V0cyByZWFkOmNsaWVudHMgdXBkYXRlOmNsaWVudHMgZGVsZXRlOmNsaWVudHMgY3JlYXRlOm
 *                      NsaWVudHMgcmVhZDpjbGllbnRfa2V5cyB1cGRhdGU6Y2xpZW50X2tleXMgZGVsZXRlOmNsaWVudF9rZXlzIGNyZWF0ZTpjbGllbnRfa2V5cyByZWFkOmNvbm5lY3Rpb25zIHVwZGF0ZT
 *                      pjb25uZWN0aW9ucyBkZWxldGU6Y29ubmVjdGlvbnMgY3JlYXRlOmNvbm5lY3Rpb25zIHJlYWQ6cmVzb3VyY2Vfc2VydmVycyB1cGRhdGU6cmVzb3VyY2Vfc2VydmVycyBkZWxldGU6cm
 *                      Vzb3VyY2Vfc2VydmVycyBjcmVhdGU6cmVzb3VyY2Vfc2VydmVycyByZWFkOmRldmljZV9jcmVkZW50aWFscyB1cGRhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIGRlbGV0ZTpkZXZpY2VfY3Jl
 *                      ZGVudGlhbHMgY3JlYXRlOmRldmljZV9jcmVkZW50aWFscyByZWFkOnJ1bGVzIHVwZGF0ZTpydWxlcyBkZWxldGU6cnVsZXMgY3JlYXRlOnJ1bGVzIHJlYWQ6cnVsZXNfY29uZmlncyB1cGR
 *                      hdGU6cnVsZXNfY29uZmlncyBkZWxldGU6cnVsZXNfY29uZmlncyByZWFkOmVtYWlsX3Byb3ZpZGVyIHVwZGF0ZTplbWFpbF9wcm92aWRlciBkZWxldGU6ZW1haWxfcHJvdmlkZXIgY3JlYXR
 *                      lOmVtYWlsX3Byb3ZpZGVyIGJsYWNrbGlzdDp0b2tlbnMgcmVhZDpzdGF0cyByZWFkOnRlbmFudF9zZXR0aW5ncyB1cGRhdGU6dGVuYW50X3NldHRpbmdzIHJlYWQ6bG9ncyByZWFkOnNoaWVs"
 *                 },
 *         "organizationId":"ORG-EA40B924B51BF3FF5611"
 *     }
 *
 * @apiSuccessExample Success-Response:
 *     {
 *         "members":[
 *                      {"id":"PpgvNAZwXYLq5RvUIj6bA3V4eLk0EeC3@clients","role":"Owner"},
 *                      {"id":"SUeRt6rcMVNzTKFRAvMRO6FUDDtpTsQp@clients","role":"Admin"},
 *                      {"id":"VTYUg5A6gYzfDs9gf57PO8toj5TcBDt7@clients","role":"Member"}
 *                   ]
 *     }
 *
 * @apiError {String} field Invalid or non-existent organization id
 * @apiErrorExample {json} Error-Response:
 *     {
 *        errorCode":500,
 *        "errorMessage":"ORG-EA40B924B51BF3FF56NON"
 *     }
 */

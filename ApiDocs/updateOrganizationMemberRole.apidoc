/**
  * @api {ServiceMethod: updateOrganizationMemberRole} /organizations/updateOrganizationMemberRole updateOrganizationMemberRole
  * @apiName UpdateOrganizationMemberRole
  * @apiGroup Member
  * @apiVersion 0.0.0-CURRENT
  * @apiPermission Request / Response / Error-response
  *
  * @apiDescription This operation enables only organization managers <b>(Owner/Admin)</b> to upgrade/downgrade relevant organization member role.
  * <br>Any of the members who posses Admin role couldn't upgrade themselves whereby only the members with higher - Owner roles are able to do that.
  * Nevertheless any member with Admin or Owner role could downgrade themselves as do the members with Owner role could downgrade the members with Admin role.
  * <br>Furthermore at least one Owner (origin or granted one) should be persisted in the organization
  * <!--<br>Permission level (Owner/Admin/Member) for each API key is automatically updated to the relevant one upon the managers who already issued these API keys were
  * upgraded or downgraded to one of the accessible roles (Owner/Admin/Member) in the organization.-->
  *
  * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
  * @apiParam {String} organizationId Already stored id for the specific organization
  * @apiParam {String} userId Already stored id for the specific organization issued by relevant authority (Auth0)
  * @apiParam {String} role any of accessible member's role (Owner/Admin/Member)
  *
  * @apiSuccess Acknowledgment Empty object
  *
  * @apiError {String} field Invalid or expired token
  *
  * @apiErrorExample {json} WebSocket
  * Request:
  *     {
  *         "q":"/organizations/updateOrganizationMemberRole",
  *         "sid": 1,
  *         "d":{
  *                "token": {
  *                            "token":"Auth0-TOKEN"
  *                },
  *                "organizationId":"ORG-ID",
  *                "userId": "id@clients",
  *                "role": "Owner"
  *         }
  *     }
  *
  * Response:
  *     {
  *         "q":"/organizations/updateOrganizationMemberRole",
  *         "sid":1,
  *         "d":{}
  *
  *     }
  *
  *     {
  *         "sig":1,
  *         "sid":1
  *     }
  *
  * Error Response:
  *     {
  *         "sig":2,
  *         "q":"/io.scalecube.services.error/500",
  *         "sid":1,
  *         "d":{
  *                "errorCode":500,
  *                "errorMessage":"Token verification failed"
  *         }
  *     }
  *
  * @apiErrorExample {json} RSocket
  * Request:
  *     {
  *         "metadata":{
  *                      "q": "/organizations/updateOrganizationMemberRole"
  *         },
  *         "data":{
  *                   "token": {
  *                               "token":"Auth0-TOKEN"
  *                   },
  *                   "organizationId":"ORG-ID",
  *                   "userId": "id@clients",
  *                   "role": "Admin"
  *         }
  *     }
  *
  * Response:
  *     {
  *         "data":{},
  *         "metadata":{
  *           "q": "/organizations/updateOrganizationMemberRole"
  *         }
  *     }
  *
  * Error Response:
  *     {
  *         "data":{
  *                   "errorCode":500,
  *                   "errorMessage":"Token verification failed"
  *         },
  *         "metadata":{
  *                      "q":"/io.scalecube.services.error/500"
  *         }
  *     }
  *
  * @apiErrorExample{json} HTTP
  * Request:
  * https://localhost:port/organizations/updateOrganizationMemberRole (endpoint url)
  *
  * Body:
  *     {
  *         "token": {
  *                     "token":"Auth0-TOKEN"
  *         },
  *         "organizationId":"ORG-ID",
  *         "userId": "id@clients",
  *         "role": "Member"
  *     }
  *
  * Response:
  *     {
  *
  *     }
  *
  * Error Response:
  *     {
  *         "errorCode":500,
  *         "errorMessage":"Token verification failed"
  *     }
  */
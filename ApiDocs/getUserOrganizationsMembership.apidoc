/**
  * @api {ServiceMethod: getUserOrganizationsMembership} /organizations/getUserOrganizationsMembership getUserOrganizationsMembership
  * @apiName GetUserOrganizationsMembership
  * @apiGroup Member
  * @apiVersion 0.0.0-CURRENT
  * @apiPermission Request / Response / Error-response
  *
  * @apiDescription This operation enables each organization <b>member</b> to get the list of all relevant organizations (full info) which the member was invited.
  * >Note: this method returns all organization info thus API keys with:
  *  ><br>-all accessible permission levels ("Owner" | "Admin" | "Member") will be returned only for the related Organization Owner
  *  ><br>-"Admin" | "Member" permission levels will be returned only for the related Organization Admin
  *  ><br>-"Member" permission level will be returned only for the related Organization Member
  *
  * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
  *
  * @apiSuccess {Object[]} organizations List of all Organizations (Array of objects) which the member was invited
  * @apiSuccess {Object[]} organizations.apiKeys List of all API keys (Array of objects) for the relevant organization
  * @apiSuccess {String} organizations.id Already generated id for the created organization
  * @apiSuccess {String} organizations.name Organization name
  * @apiSuccess {String} organizations.email Organization e-mail
  * @apiSuccess {String} organizations.ownerId id for clients already generated by relevant authority (Auth0)
  *
  * @apiError {String} field Invalid or expired token
  *
  * @apiErrorExample {json} WebSocket
  * Request:
  *     {
  *         "q":"/organizations/getUserOrganizationsMembership",
  *         "sid": 1,
  *         "d":{
  *               "token": {
  *                           "token":"Auth0-TOKEN"
  *               }
  *         }
  *     }
  *
  * Response:
  *     {
  *         "q":"/organizations/getUserOrganizationsMembership",
  *         "sid":1,
  *         "d":{
  *                "apiKeys":[],
  *                "id":"ORG-ID",
  *                "name":"specifiedOrganizationName",
  *                "email":"specifiedOrganization@email.com",
  *                "ownerId":"id@clients"
  *         }
  *
  *     }
  *
  *     {
  *         "sig":1,
  *         "sid":1
  *     }
  *
  * Error Response:
  *     {
  *         "sig":2,
  *         "q":"/io.scalecube.services.error/500",
  *         "sid":1,
  *         "d":{
  *                "errorCode":500,
  *                "errorMessage":"Token verification failed"
  *         }
  *     }
  *
  * @apiErrorExample {json} RSocket
  * Request:
  *     {
  *         "metadata":{
  *                      "q": "/organizations/getUserOrganizationsMembership"
  *         },
  *         "data":{
  *                   "token": {
  *                               "token":"Auth0-TOKEN"
  *                   }
  *         }
  *     }
  *
  * Response:
  *     {
  *         "data":{
  *                   "apiKeys":[],
  *                   "id":"ORG-ID",
  *                   "name":"specifiedOrganizationName",
  *                   "email":"specifiedOrganization@email.com",
  *                   "ownerId":"id@clients"
  *         },
  *         "metadata":{
  *           "q": "/organizations/getUserOrganizationsMembership"
  *         }
  *     }
  *
  * Error Response:
  *     {
  *         "data":{
  *                   "errorCode":500,
  *                   "errorMessage":"Token verification failed"
  *         },
  *         "metadata":{
  *                      "q":"/io.scalecube.services.error/500"
  *         }
  *     }
  *
  * @apiErrorExample{json} HTTP
  * Request:
  * https://localhost:port/organizations/getUserOrganizationsMembership (endpoint url)
  *
  * Body:
  *     {
  *         "token": {
  *                     "token":"Auth0-TOKEN"
  *         }
  *     }
  *
  * Response:
  *     {
  *         "apiKeys":[],
  *         "id":"ORG-ID",
  *         "name":"specifiedOrganizationName",
  *         "email":"specifiedOrganization@email.com",
  *         "ownerId":"id@clients"
  *     }
  *
  * Error Response:
  *     {
  *         "errorCode":500,
  *         "errorMessage":"Token verification failed"
  *     }
  */
/**
  * @api {ServiceMethod: updateOrganization} /organizations/updateOrganization updateOrganization
  * @apiName UpdateOrganization
  * @apiGroup Organization
  * @apiVersion 0.0.0-CURRENT
  * @apiPermission Request / Response / Error-response
  *
  * @apiDescription This operation enables only organization managers <b>(Owner/Admin)</b> to update (edit)
  * the specific organization information (name or email) optionally
  * >Note: this method returns all organization info thus API keys with:
  *  - all accessible access levels ("Owner" | "Admin" | "Member") will be returned only for the related Organization Owner
  *  - "Admin" | "Member" access levels will be returned only for the related Organization Admin
  *  - "Member" access level will be returned only for the related Organization Member
  *
  * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
  * @apiParam {String} organizationId Already stored id for the specific organization
  * @apiParam {String} name New specified organization name
  * @apiParam {String} email New specified organization e-mail
  *
  * @apiSuccess {Object[]} apiKeys List of all API keys (Array of objects) for the relevant organization
  * @apiSuccess {String} id Already generated id for the created organization
  * @apiSuccess {String} name New specified organization name
  * @apiSuccess {String} email New specified organization e-mail
  * @apiSuccess {String} ownerId id for clients already generated by relevant authority (Auth0)
  *
  * @apiError {String} field Organization e-mail wasn't specified
  *
  * @apiErrorExample {json} WebSocket
  * Request:
  *     {
  *         "q":"/organizations/updateOrganization",
  *         "sid": 1,
  *         "d":{
  *               "token": {
  *                           "token":"Auth0-TOKEN"
  *               },
  *         "organizationId":"ORG-ID",
  *         "name":"newSpecifiedOrganizationName",
  *         "email":"newSpecifiedOrganization@email.com"
  *         }
  *     }
  *
  * Response:
  *     {
  *         "q":"/organizations/updateOrganization",
  *         "sid":1,
  *         "d":{
  *                "apiKeys":[],
  *                "id":"ORG-ID",
  *                "name":"newSpecifiedOrganizationName",
  *                "email":"newSpecifiedOrganization@email.com",
  *                "ownerId":"id@clients"
  *         }
  *
  *     }
  *
  *     {
  *         "sig":1,
  *         "sid":1
  *     }
  *
  * Error Response:
  *     {
  *         "sig":2,
  *         "q":"/io.scalecube.services.error/500",
  *         "sid":1,
  *         "d":{
  *                "errorCode":500,
  *                "errorMessage":"Organization email cannot be empty"
  *         }
  *     }
  *
  * @apiErrorExample {json} RSocket
  * Request:
  *     {
  *         "metadata":{
  *                      "q": "/organizations/updateOrganization"
  *         },
  *         "data":{
  *                   "token": {
  *                               "token":"Auth0-TOKEN"
  *                   },
  *                   "organizationId":"ORG-ID",
  *                   "name":"newSpecifiedOrganizationName",
  *                   "email":"newSpecifiedOrganization@email.com"
  *         }
  *     }
  *
  * Response:
  *     {
  *         "data":{
  *                   "apiKeys":[],
  *                   "id":"ORG-ID",
  *                   "name":"newSpecifiedOrganizationName",
  *                   "email":"newSpecifiedOrganization@email.com",
  *                   "ownerId":"id@clients"
  *         },
  *         "metadata":{
  *           "q": "/organizations/updateOrganization"
  *         }
  *     }
  *
  * Error Response:
  *     {
  *         "data":{
  *                   "errorCode":500,
  *                   "errorMessage":"Organization email cannot be empty"
  *         },
  *         "metadata":{
  *                      "q":"/io.scalecube.services.error/500"
  *         }
  *     }
  *
  * @apiErrorExample{json} HTTP
  * Request:
  * https://localhost:port/organizations/updateOrganization (endpoint url)
  *
  * Body:
  *     {
  *        "token": {
  *                     "token":"Auth0-TOKEN"
  *         },
  *         "organizationId":"ORG-ID",
  *         "name":"newSpecifiedOrganizationName",
  *         "email":"newSpecifiedOrganization@email.com"
  *     }
  *
  * Response:
  *     {
  *         "apiKeys":[],
  *         "id":"ORG-ID",
  *         "name":"newSpecifiedOrganizationName",
  *         "email":"newSpecifiedOrganization@email.com",
  *         "ownerId":"id@clients"
  *     }
  *
  * Error Response:
  *     {
  *         "errorCode":500,
  *         "errorMessage":"Organization email cannot be empty"
  *     }
  */
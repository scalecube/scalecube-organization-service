/**
  * @api {ServiceMethod: getOrganization} /organizations/getOrganization getOrganization
  * @apiName GetOrganization
  * @apiGroup Organization
  * @apiVersion 0.0.0-CURRENT
  * @apiPermission Request / Response / Error-response
  *
  * @apiDescription This operation enables <b>all members</b> of the relevant organization to get the full organization information.
  * >Note: this method returns all organization info thus API keys with:
  *  ><br>-all accessible permission levels ("Owner" | "Admin" | "Member") will be returned only for the related Organization Owner
  *  ><br>-"Admin" | "Member" permission levels will be returned only for the related Organization Admin
  *  ><br>-"Member" permission level will be returned only for the related Organization Member
  *
  * @apiParam {Object} token The requested token issued by relevant authority (Auth0)
  * @apiParam {String} organizationId Already stored id for the specific organization
  *
  * @apiSuccess {Object[]} apiKeys List of all API keys (Array of objects) for the relevant organization
  * @apiSuccess {String} id Already generated id for the created organization
  * @apiSuccess {String} name Organization name
  * @apiSuccess {String} email Organization e-mail
  * @apiSuccess {String} ownerId id for clients already generated by relevant authority (Auth0)
  *
  * @apiError {String} field user isn't the member (outsider) of the specified organization
  *
  * @apiErrorExample {json} WebSocket
  * Request:
  *     {
  *         "q":"/organizations/getOrganization",
  *         "sid": 1,
  *         "d":{
  *                "token": {
  *                            "token":"Auth0-TOKEN"
  *                },
  *                "organizationId":"ORG-ID"
  *         }
  *     }
  *
  * Response:
  *     {
  *         "q":"/organizations/getOrganization",
  *         "sid":1,
  *         "d":{
  *                "apiKeys":[],
  *                "id":"ORG-ID",
  *                "name":"specifiedOrganizationName",
  *                "email":"specifiedOrganization@email.com",
  *                "ownerId":"id@clients"
  *         }
  *
  *     {
  *         "sig":1,
  *         "sid":1
  *     }
  *
  * Error Response:
  *     {
  *         "sig":2,
  *         "q":"/io.scalecube.services.error/500",
  *         "sid":1,
  *         "d":{
  *                errorCode":500,
  *                "errorMessage":"user: 'null', name: 'id@clients', is not a member of organization: 'ORG-ID'"
  *         }
  *     }
  *
  * @apiErrorExample {json} RSocket
  * Request:
  *     {
  *         "metadata":{
  *                      "q": "/organizations/getOrganization"
  *         },
  *         "data":{
  *                   "token": {
  *                               "token":"Auth0-TOKEN"
  *                   },
  *                   "name":"specifiedOrganizationName",
  *                   "email":"specifiedOrganization@email.com"
  *         }
  *     }
  *
  * Response:
  *     {
  *         "data":{
  *                   "apiKeys":[],
  *                   "id":"ORG-ID",
  *                   "name":"specifiedOrganizationName",
  *                   "email":"specifiedOrganization@email.com",
  *                   "ownerId":"id@clients"
  *         },
  *         "metadata":{
  *           "q": "/organizations/getOrganization"
  *         }
  *     }
  *
  * Error Response:
  *     {
  *         "data":{
  *                   "errorCode":500,
  *                   "errorMessage":"user: 'null', name: 'id@clients', is not a member of organization: 'ORG-ID'"
  *         },
  *         "metadata":{
  *                      "q":"/io.scalecube.services.error/500"
  *         }
  *     }
  *
  * @apiErrorExample{json} HTTP
  * Request:
  * https://localhost:port/organizations/getOrganization (endpoint url)
  *
  * Body:
  *     {
  *         "token": {
  *                     "token":"Auth0-TOKEN"
  *         },
  *         "organizationId":"ORG-ID"
  *     }
  *
  * Response:
  *     {
  *         "apiKeys":[],
  *         "id":"ORG-ID",
  *         "name":"specifiedOrganizationName",
  *         "email":"specifiedOrganization@email.com",
  *         "ownerId":"id@clients"
  *     }
  *
  * Error Response:
  *     {
  *         "errorCode":500,
  *         "errorMessage":"user: 'null', name: 'id@clients', is not a member of organization: 'ORG-ID'"
  *     }
  */
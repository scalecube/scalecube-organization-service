/**
* @api {Transport protocols} / Getting Started
* @apiName GettingStarted
* @apiGroup Overview
* @apiVersion 0.0.0-CURRENT
* @apiDescription Organization service enable you to integrate the API in order to create and manage the organizations.
* Appropriate permission level (roles: Owner/Admin) is required to manage the organization from the relevant member's perspective besides the origin owner abilities.
* Thus each organization could be deleted or relevant credentials updated, valid members could be invited to and removed from the relevant organization as do the
* granted members roles (Owner/Admin/Member) could be updated and each member could get the info about the organization and it's membership.
* Organization managers could provide and delete the relevant API keys (permission level with appropriate assigned roles: (Owner/Admin/Member)) which are vital feature
* for the <a href="http://scalecube.io/configuration-service/index.html">Configuration service</a> management and security purpose and don't relates to the organization members similar roles.
*
*
* <b>Getting Started</b>
*
*
* All API endpoints are documented below and require the <a href="http://scalecube.io/configuration-service/index.html">Configuration service</a> host address.
* <br> You can try out any query in realtime using our interactive API.
* Actually service requires token authentication, so there is a necessity to get the token issued via secured authority.
* <br>Thus, we recommend you first to get the <a href="https://manage.auth0.com/">Auth0</a> token whereby to perform the valid requests across all service endpoints.
*
* Validation for the object entities is handled by scalecube services and do the next upon the request object:
* >~ ignores any excessive keys and values added besides the required parameters
* ><br>~ doesn't ignore the keys duplicates and takes the last values which applied for each of the relevant key duplicate
*/

/**
* @api {Host addresses} / General Definitions
* @apiName GeneralDefinitions
* @apiGroup Overview
* @apiVersion 0.0.0-CURRENT
* @apiDescription The request should contain the following structure upon the transport protocols are used:
                    <ul>
								   <b>Websocket</b>
                                   <li> "q": The query of the relevant service path </li>
                                   <li> "sid": The identifier of the stream id. </li>
                                   <li> "d": The request data (parameters and values). </li>
								   <b>RSocket</b>
								   <li> "metadata" which contains object "q": The query of the relevant service path </li>
                                   <li> "data" object: The request data (parameters and values). </li>
								   <b>HTTP</b>
								   <li> add the "/organizations/method_name" to the host </li>
								   <li> "headers": Content-Type json </li>
                                   <li> "body" json object: The request data (parameters and values). </li>
                    </ul>

* @apiParamExample {json} Request-Example Websocket:
                    {
                        "q": "/organizations/method_name",
                        "sid": 1,
                        "d": {
                                "relevant request parameters and values"
                             }
                    }

* @apiParamExample {json} Request-Example RSocket:
                    {
                        "metadata": {
                            "q": "/organizations/method_name",
                            }
                            "d": {
                                    "relevant request parameters and values"
                            }
                    }

* @apiParamExample {json} Request-Example HTTP:
                    {
                                    "relevant request parameters and values"
                    }

*/

/**
  * @api {Host addresses} / Interactive API Explorer
  * @apiName InteractiveAPIExplorer
  * @apiGroup Overview
  * @apiVersion 0.0.0-CURRENT
  * @apiDescription For example <b>Websocket</b> connection is one of the accessible ways to use the API, so please follow the steps below to connect and perform requests via Sandbox:
  <ul>
                 <li> Navigate to the sandbox: <a href="http://scalecube.io/api-sandbox/app/index.html">Scalecube sandbox</a> </li>
                 <li> Click on the <b>Settings</b> button and choose the relevant <b>transort</b> and host <b>address</b>: wss://configuration-service-7070.genesis.om2.com </li>
                 <li> Click on <b>Import icon</b> and copy-paste the template.json file path <a href="https://raw.githubusercontent.com/PavloPetrina/JsonData/master/OrganizationServiceALL.json">Organization service endpoints.json</a></li>
                 <li> Click on the <b>Connect</b> button (now you are connected to the environment) and push <b>Send</b> button to make your request</li>
  </ul>
*/

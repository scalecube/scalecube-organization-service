/**
* @api {Host addresses} / Getting Started
* @apiName GettingStarted
* @apiGroup Overview
* @apiVersion 0.0.0-CURRENT
* @apiDescription Organization service enable you to integrate the API in order to create and manage the organizations.
* Besides the origin owner (founder) abilities there is necessity for relevant organization members to achieve appropriate permission level (roles: Owner/Admin) for manage purpose.
* Thus each organization could be deleted or relevant credentials updated, valid members could be invited to and removed from the relevant organization as do the
* granted members roles (Owner/Admin/Member) could be changed and each member could get the info about the organization and also to know the own membership in the relevant organizations.
* Organization managers could provide and delete the relevant API keys (permission level with appropriate assigned roles: Owner/Admin/Member) which are vital leverage
* for the <a href="http://scalecube.io/configuration-service/index.html">Configuration service</a> management and security purpose and these API key assigned with relevant roles don't relates to the organization members similar roles.
*
*
* <b>Getting Started</b>
*
*
* All API endpoints documented below are the integral part of <a href="http://scalecube.io/configuration-service/index.html">Configuration service</a> host address.
* <br> You can try out any query in realtime using our interactive API.
* Actually service requires authentication, so there is a necessity to get the token issued via secured authority.
* <br>Thus, we recommend you first to create an account in <a href="https://manage.auth0.com/">Auth0</a> and issue the token whereby to perform the valid requests across all service endpoints.
*
* <b>Validation</b> for the object entities is handled by <b>Scalecube</b> services and do the next upon the request object:
* >~ ignores any excessive keys and values added besides the required parameters
* ><br>~ doesn't ignore the keys duplicates and takes the last values which applied for each of the relevant key duplicate
*
* >Contracts validation is implemented for specific parameters which value type is string and can only contain characters
* in range A-Z, a-z, 0-9 as well as underscore, period, dash & percent. Appropriate validation will be added soon.
*/

/**
* @api {Host address} / Transport protocols API
* @apiName TransportProtocols
* @apiGroup Overview
* @apiVersion 0.0.0-CURRENT
* @apiDescription Upon relevant <b>host address</b> was set the <b>request</b> should contain the following structure according to transport protocol usage:
                    <ul>
								   <b>Websocket (WS)</b><a href="https://github.com/scalecube/scalecube-services/wiki/Web-Socket-API"> API</a>
                                    <li> relevant host address </li>
                                    <li> "q": The query of the relevant service name and method used </li>
                                    <li> "sid": The stream identifier (couldn't be duplicated in the current stream connection)</li>
                                    <li> "d": The request data object (keys and values) </li>
								   <b>RSocket (RS)</b><a href="https://github.com/scalecube/scalecube-services/wiki/Rsocket-API"> API</a>
								     <li> relevant host address </li>
								     <li> "metadata": object which contains "q": The query of the relevant service name and method used </li>
                                    <li> "d": object: The request data (parameters and values) </li>
								   <b>HTTP</b>
								     <li>  host address with relevant service name and method used </li>
								     <li> "headers": Content-Type application/json </li>
                                    <li> "body" json: The request data object (parameters and values) </li>
                                    <li>  request "method": POST </li>
                    </ul>

* @apiParamExample {json} Request-Example (WS):
                    {
                        "q": "/organizations/method_name",
                        "sid": 1,
                        "d": {
                                "relevant request parameters and values"
                             }
                    }

* @apiParamExample {json} Request-Example (RS):
                    {
                         "metadata": {
                             "q": "/organizations/method_name"
                                     },
                             "data": {
                                        "relevant request parameters and values"
                                     }
                    }

* @apiParamExample {json} Request-Example (HTTP):
                    {
                            "relevant request parameters and values"
                    }

*/

/**
  * @api {Host address} / Interactive API Explorer
  * @apiName InteractiveAPIExplorer
  * @apiGroup Overview
  * @apiVersion 0.0.0-CURRENT
  * @apiDescription For example <b>Websocket</b> connection is one of the accessible ways to use the API, so please follow the steps below to connect and run commands via Sandbox:
  <ul>
                 <li> Navigate to the sandbox: <a href="http://scalecube.io/api-sandbox/app/index.html">Scalecube sandbox</a> </li>
                 <li> Click on the <b>Settings</b> button and choose the relevant <b>transort</b> and host <b>address</b>: wss://configuration-service-7070.genesis.om2.com </li>
                 <li> Click on <b>Import icon</b> and copy-paste the exchange.json file path <a href="https://raw.githubusercontent.com/scalecube/scalecube-organization-service/master/API-Calls-examples.json">Organization service endpoints.json</a></li>
                 <li> Click on the <b>Connect</b> button (now you are connected to the environment) and push <b>Send</b> button to make your request</li>
  </ul>
*/

<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>scalecube-organization-parent</artifactId>
  <version>2.0.13-SNAPSHOT</version>


  <parent>
    <groupId>io.scalecube</groupId>
    <artifactId>scalecube-parent-pom</artifactId>
    <version>0.0.16</version>
  </parent>
  <packaging>pom</packaging>

  <name>scalecube-organization-parent</name>
  <scm>
    <url>https://github.com/scalecube/scalecube-organization-service</url>
    <connection>scm:git:git@github.com:scalecube/scalecube-organization-service.git</connection>
    <developerConnection>scm:git:git@github.com:scalecube/scalecube-organization-service.git
    </developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <scalecube.config.version>0.3.6</scalecube.config.version>
    <scalecube-services.version>2.4.4</scalecube-services.version>
    <scalecube-gateway.version>2.4.4</scalecube-gateway.version>
    <scalecube-security-jwt.version>1.0.2</scalecube-security-jwt.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <junit-jupiter.version>5.3.0</junit-jupiter.version>
    <jackson-databind.version>2.7.6</jackson-databind.version>
    <vault-java-driver.version>3.1.0</vault-java-driver.version>
    <couchbase-client.version>2.6.0</couchbase-client.version>
    <slf4j.version>1.7.7</slf4j.version>
    <log4j.version>2.11.1</log4j.version>
    <commons-codec.version>1.10</commons-codec.version>
    <hamcrest-library.version>1.3</hamcrest-library.version>
    <maven-shade-plugin.version>3.1.0</maven-shade-plugin.version>
    <dockerfile.repository>scalecube/${project.artifactId}</dockerfile.repository>
    <dockerfile.useMavenSettingsForAuth>true</dockerfile.useMavenSettingsForAuth>
  </properties>

  <modules>
    <module>scalecube-organization-api</module>
    <module>scalecube-organization</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.scalecube</groupId>
        <artifactId>config</artifactId>
        <version>${scalecube.config.version}</version>
      </dependency>
      <dependency>
        <groupId>io.scalecube</groupId>
        <artifactId>config-vault</artifactId>
        <version>${scalecube.config.version}</version>
      </dependency>
      <dependency>
        <groupId>com.bettercloud</groupId>
        <artifactId>vault-java-driver</artifactId>
        <version>${vault-java-driver.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>
      <dependency>
        <groupId>io.scalecube</groupId>
        <artifactId>scalecube-security-jwt</artifactId>
        <version>${scalecube-security-jwt.version}</version>
      </dependency>
      <dependency>
        <groupId>io.scalecube</groupId>
        <artifactId>scalecube-services-discovery</artifactId>
        <version>${scalecube-services.version}</version>
      </dependency>
      <dependency>
        <groupId>io.scalecube</groupId>
        <artifactId>scalecube-services-transport-jackson</artifactId>
        <version>${scalecube-services.version}</version>
      </dependency>
      <dependency>
        <groupId>io.scalecube</groupId>
        <artifactId>scalecube-services</artifactId>
        <version>${scalecube-services.version}</version>
      </dependency>
      <dependency>
        <groupId>io.scalecube</groupId>
        <artifactId>scalecube-services-api</artifactId>
        <version>${scalecube-services.version}</version>
      </dependency>
      <dependency>
        <groupId>com.couchbase.client</groupId>
        <artifactId>java-client</artifactId>
        <version>${couchbase-client.version}</version>
      </dependency>

      <!-- Loggers -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <scope>test</scope>
      </dependency>
      <!-- This will get hamcrest-core automatically -->
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <extensions>
      <extension>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-extension</artifactId>
        <version>${dockerfile.maven.extension.version}</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
          <executions>
            <execution>
              <id>default</id>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <transformers>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                    <mainClass>${mainClass}</mainClass>
                  </transformer>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                </transformers>
                <outputDirectory>${project.build.directory}</outputDirectory>
                <createDependencyReducedPom>false</createDependencyReducedPom>
                <shadedArtifactAttached>true</shadedArtifactAttached>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <classpathPrefix>lib/</classpathPrefix>
                <mainClass>${mainClass}</mainClass>
              </manifest>
            </archive>
            <excludes>
              <exclude>META-INF/*.SF</exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <overWriteReleases>false</overWriteReleases>
                <outputDirectory>${project.build.directory}/lib</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>dockerfile-maven-plugin</artifactId>
          <version>${dockerfile.maven.version}</version>
          <executions>
            <execution>
              <id>default</id>
              <goals>
                <goal>build</goal>
              </goals>
              <phase>install</phase>
              <configuration>
                <buildArgs>
                  <EXECUTABLE_JAR>${project.build.finalName}</EXECUTABLE_JAR>
                  <SERVICE_NAME>${project.artifactId}</SERVICE_NAME>
                </buildArgs>
                <tag>latest</tag>
              </configuration>
            </execution>
            <execution>
              <id>tag-version</id>
              <goals>
                <goal>tag</goal>
              </goals>
              <phase>install</phase>
              <configuration>
                <tag>${project.version}</tag>
              </configuration>
            </execution>
            <execution>
              <id>deployment</id>
              <goals>
                <goal>push</goal>
              </goals>
              <phase>deploy</phase>
              <configuration>
                <tag>latest</tag>
              </configuration>
            </execution>
            <execution>
              <id>tag-deployment</id>
              <goals>
                <goal>push</goal>
              </goals>
              <phase>deploy</phase>
              <configuration>
                <tag>${project.version}</tag>
              </configuration>
            </execution>
            <execution>
              <id>create-extra-tags</id>
              <goals>
                <goal>tag</goal>
              </goals>
              <phase>install</phase>
              <configuration>
                <tag>${extratags}</tag>
                <skipTag>${noextratags}</skipTag>
              </configuration>
            </execution>
            <execution>
              <id>push-extra-tags</id>
              <goals>
                <goal>push</goal>
              </goals>
              <phase>deploy</phase>
              <configuration>
                <tag>${extratags}</tag>
                <skip>${noextratags}</skip>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>no-extra-tags</id>
      <properties>
        <noextratags>true</noextratags>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>extra-tags</id>
      <properties>
        <noextratags>false</noextratags>
      </properties>
      <activation>
        <property>
          <name>extratags</name>
        </property>
      </activation>
    </profile>
    <profile>
      <id>SkipDockerGoals</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <dockerfile.skip>true</dockerfile.skip>
      </properties>
    </profile>
    <profile>
      <id>RunDockerGoals</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
        <file>
          <exists>/usr/bin/docker</exists>
        </file>
      </activation>
      <properties>
        <dockerfile.skip>false</dockerfile.skip>
      </properties>
    </profile>
  </profiles>
</project>
